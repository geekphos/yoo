basePath: /v1
definitions:
  v1.ChangePasswordRequest:
    properties:
      newPassword:
        maxLength: 14
        minLength: 6
        type: string
      oldPassword:
        maxLength: 14
        minLength: 6
        type: string
    required:
    - newPassword
    - oldPassword
    type: object
  v1.CreateUserRequest:
    properties:
      email:
        type: string
      nickname:
        type: string
      password:
        maxLength: 14
        minLength: 6
        type: string
    required:
    - email
    - nickname
    - password
    type: object
  v1.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 14
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  v1.LoginResponse:
    properties:
      token:
        type: string
    type: object
  v1.ProfileResponse:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      nickname:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login with username and password
      parameters:
      - description: Login Request
        in: body
        name: LoginRequest
        required: true
        schema:
          $ref: '#/definitions/v1.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.LoginResponse'
      tags:
      - User
  /users:
    post:
      consumes:
      - application/json
      description: create a new user
      parameters:
      - description: Create User Request
        in: body
        name: CreateUserRequest
        required: true
        schema:
          $ref: '#/definitions/v1.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - User
  /users/{email}/change-password:
    patch:
      consumes:
      - application/json
      description: change password
      parameters:
      - description: Change Password Request
        in: body
        name: ChangePasswordRequest
        required: true
        schema:
          $ref: '#/definitions/v1.ChangePasswordRequest'
      - description: User Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      tags:
      - User
  /users/profile:
    get:
      consumes:
      - application/json
      description: Get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ProfileResponse'
      security:
      - BearerAuth: []
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
